# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# mod = logo key
set $mod Mod4
set $alt Mod1
set $ctrl Control

set $term kitty

### Output configuration
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill

output eDP-1 {
    resolution 1920x1080
    position 0,0
}

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input type:keyboard {
    xkb_layout "us"
    xkb_variant "altgr-intl"
}

input type:touchpad {
    tap enabled
    natural_scroll enabled
    pointer_accel 0.5
    middle_emulation disabled
}

# Disable focus-follows-mouse and mouse-follows-focus
focus_follows_mouse no
mouse_warping none

### Key bindings
# Basics:
bindsym $mod+Return exec $term # new terminal
bindsym $mod+q kill            # kill window

# Launchers:
bindsym $mod+d exec dmenu_path | wofi --show drun -i | xargs swaymsg exec -- # app launcher
bindsym $mod+x exec ~/.local/bin/wofi-select-window.sh                       # window switcher


# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+Shift+r reload

# Media controls
bindsym XF86AudioPrev         exec playerctl prev
bindsym XF86AudioPlay         exec playerctl play-pause
bindsym XF86AudioNext         exec playerctl next
bindsym XF86AudioLowerVolume  exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioRaiseVolume  exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioMute         exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86MonBrightnessDown exec brightnessctl set 10%-
bindsym XF86MonBrightnessUp   exec brightnessctl set +10%

# Screenshots
bindsym Print			exec grim -g "$(slurp)" - | swappy -f -

#
# Moving around:
#
# Move your focus around
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# Cycle between workspaces
bindsym $mod+$ctrl+Left  workspace prev_on_output
bindsym $mod+$ctrl+Right workspace next_on_output

# Move the focused window between workspaces with the same but add Shift
bindsym $mod+$ctrl+Shift+Left	move container to workspace prev_on_output; workspace prev_on_output
bindsym $mod+$ctrl+Shift+Right	move container to workspace next_on_output; workspace next_on_output

# Cycle between outputs
bindsym $mod+$alt+Left	focus output left
bindsym $mod+$alt+Down	focus output down
bindsym $mod+$alt+Up	focus output up
bindsym $mod+$alt+Right	focus output right

#
# Workspaces:
#
# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8:chats
bindsym $mod+9 workspace number 9:music
bindsym $mod+0 workspace number 10
# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10
# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.
#
# Layout stuff:
#
# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+b splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

# Move focus to the parent container
bindsym $mod+a focus parent
#
# Scratchpad:
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Session management
#

set $mode_system System: (l) lock, (e) logout, (s) suspend, (r) reboot, (S) shutdown, (R) UEFI
mode "$mode_system" {
    set $lock swaylock --ignore-empty-password --show-failed-attempts --show-keyboard-layout --indicator-caps-lock
    set $suspend systemctl suspend
    set $reboot systemctl reboot
    set $shutdown systemctl poweroff
    set $uefi systemctl reboot --firmware-setup

    bindsym l exec $lock; mode "default"
    bindsym e exec swaymsg exit
    bindsym s exec $lock; exec $suspend; mode "default"
    bindsym r exec $reboot
    bindsym Shift+s exec $shutdown
    bindsym Shift+r exec $uefi

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Shift+q mode "$mode_system"


#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command while true; do \
    	echo "$USER $(date +'%Y-%m-%d %H:%M:%S')"; \
	sleep 1; \
    done

    colors {
        statusline #ffffff
        background #323232
        inactive_workspace #32323200 #32323200 #5c5c5c
    }
}

#
# Looks:
#
# turn off gaps and borders when there is only one windows
smart_borders on
smart_gaps on
hide_edge_borders smart

#
# Special windows:
#
for_window [class="mpv"] floating enable, sticky enable
for_window [class="^.*"] inhibit_idle fullscreen
for_window [app_id="^.*"] inhibit_idle fullscreen

for_window [title="pinentry-gnome3"] floating enable, move position center
for_window [app_id="pavucontrol"] floating enable, move position center

for_window [class="discord"] move container to workspace 6
for_window [class="slack"] move container to workspace 7
for_window [class="Element"] move container to workspace 8
for_window [class="Spotify"] move container to workspace 9

# mark xwayland
for_window [shell=".*"] title_format "%title :: %shell"

#
# Startup:
#
# TODO: verify if this really fixed the keyring or is just snakeoil
exec eval $(gnome-keyring-daemon --start)
exec export SSH_AUTH_SOCK
exec spotify
exec element-desktop
exec nextcloud
exec keepassxc

exec_always killall mako; exec mako -c ~/.config/mako/config
exec_always notify-send 'Sway config loaded...'

include /etc/sway/config.d/*
